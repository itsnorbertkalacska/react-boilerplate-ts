{"version":3,"sources":["app/layout/top-nav.tsx","config/index.ts","common/link/index.ts","app/layout/left-nav.tsx","app/layout/footer.tsx","app/layout/index.tsx","interface/portfolio/index.ts","common/title/index.tsx","app/dashboard/table.tsx","app/dashboard/index.tsx","common/layout/index.tsx","interface/profile/mock-data.ts","app/profile/index.tsx","interface/profile/index.ts","app/index.tsx","common/auth/wrapper.tsx","interface/login/index.ts","public/login/index.tsx","public/signup/index.tsx","public/unauthorized/index.tsx","public/logout/index.tsx","interface/login/logout.ts","public/index.tsx","router.tsx","theme.js","serviceWorker.js","index.tsx"],"names":["Top","UI","Nav","useStyles","Utils","makeStyles","theme","appBar","backgroundColor","palette","primary","main","props","isOpen","onToggle","menus","link","Icon","UserIcon","LogoutIcon","classes","title","className","toRouteApp","s","toRoutePublic","Public","default","signup","unauthorized","login","logout","App","dashboard","profile","Left","Drawer","Menu","listMain","Link","label","DashboardIcon","onClose","list","footer","padding","spacing","gitsha","process","Footer","Typography","variant","color","align","href","Date","getFullYear","root","display","appBarSpacer","mixins","toolbar","content","flexGrow","overflow","minHeight","container","paddingTop","paddingBottom","Layout","AssetClass","Platform","React","useState","open","setOpen","children","CssBaseline","Container","maxWidth","type","component","data","assetClass","Stocks","amount","value","date","location","FlowBank","Cash","def","name","render","x","style","textAlign","NUtils","number","formatNumber","total","Portfolio","map","reduce","a","b","Grid","item","xs","firstName","lastName","email","uuid","View","Wrapper","List","Load","WithLoader","Component","dataLoad","Promise","r","Mock","authWrapper","permission","path","Links","Dashboard","Profile","to","permissions","Stateful","Credentials","getPermissions","pathname","includes","Store","set","mockLoginResponse","ProfileMock","lang","authenticate","user","reject","errors","resolve","Business","undefined","redirect","setRedirect","Login","layout","Error","Title","onSuccess","onSubmit","D","history","useHistory","get","Buttons","Button","onClick","goBack","useEffect","remove","MyRouter","Logout","Signup","Unauthorized","getProfile","History","basename","R","withRouter","maxSnack","createMuiTheme","secondary","background","success","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9cc27d44.chunk.js","sourcesContent":["import React from 'react';\nimport { appTitle } from 'config/index';\n\nimport {\n  ExitToApp as LogoutIcon,\n  Person as UserIcon\n} from '@material-ui/icons';\n\nimport { UI, Utils } from '@nexys/material-components';\n\nconst {\n  Nav: { Top }\n} = UI;\n\nconst useStyles = Utils.makeStyles(theme => ({\n  appBar: {\n    backgroundColor: theme.palette.primary.main\n  }\n}));\n\nexport default (props: { isOpen: boolean; onToggle: any }) => {\n  const { isOpen, onToggle } = props;\n\n  const menus = [\n    { link: '/app/profile', Icon: UserIcon },\n    { link: '/logout', Icon: LogoutIcon }\n  ];\n  const classes = useStyles();\n\n  return (\n    <Top\n      title={appTitle}\n      menus={menus}\n      isOpen={isOpen}\n      onToggle={onToggle}\n      className={classes.appBar}\n    />\n  );\n};\n","export const withBackend = false;\n\nexport const appTitle = 'Boilerplate';\n","// repository of all links used in the application to avoid wrong refewrences\n\n/*\nattempt at having a less verbose solution: works but no autocomplete ...\nconst appArray = ['dashboard', 'crud', 'profile', 'unauthorizedPage'];\n\nconst AppMap: Map<string, string> = new Map(\n  appArray.map(k => {\n    return [k, '/app/' + k];\n  })\n);\n\nexport const App = Object.fromEntries(AppMap);\n*/\n\nconst toRouteApp = (s: string) => '/app' + s;\nconst toRoutePublic = (s: string) => '' + s;\n\nexport const Public = {\n  default: toRoutePublic('/'),\n  signup: toRoutePublic('/signup'),\n  unauthorized: toRoutePublic('/unauthorized'),\n  login: toRoutePublic('/login'),\n  logout: toRoutePublic('/logout')\n};\n\nexport const App = {\n  default: toRouteApp('/'),\n  dashboard: toRouteApp('/dashboard'),\n  profile: toRouteApp('/profile')\n};\n","import React from 'react';\n\nimport { Dashboard as DashboardIcon } from '@material-ui/icons';\n\nimport { UI } from '@nexys/material-components';\n\nimport * as Link from 'common/link';\n\nconst {\n  Nav: {\n    Left: { Drawer, Menu }\n  }\n} = UI;\n\ninterface TMenu {\n  link: string;\n  label: string;\n  Icon: any;\n  permission?: string;\n}\n\nconst listMain: TMenu[] = [\n  {\n    link: Link.App.dashboard,\n    label: 'Dashboard',\n    Icon: DashboardIcon\n  }\n];\n\nexport default (props: { isOpen: boolean; onClose: any }) => {\n  const { isOpen, onClose } = props;\n\n  // list of permissions from profile\n  //const permissions = Stateful.Credentials.getPermissions() || [];\n  //listMain /*.filter(x => permissions.includes(x.permission))*/\n\n  return (\n    <Drawer isOpen={isOpen} onClose={onClose}>\n      <Menu list={listMain} />\n    </Drawer>\n  );\n};\n","import React from 'react';\nimport { Typography, Link } from '@material-ui/core';\nimport { Utils } from '@nexys/material-components';\nimport { appTitle } from 'config/index';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  footer: {\n    padding: theme.spacing(2)\n  }\n}));\n\nconst gitsha: string = process.env.REACT_APP_GIT_SHA || 'GIT SHA';\nconst gitshaLink:string = 'https://github.com/nexys-system/react-boilerplate-ts/commit/' + gitsha;\n\nconst Footer = () => {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        Copyright ©{' '}\n        <Link color=\"inherit\" href=\"\">\n          {appTitle}\n        </Link>\n        {` ${new Date().getFullYear()}`}\n        <br />\n        <small><a href={gitshaLink}>{gitsha}</a></small>\n      </Typography>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { Utils } from '@nexys/material-components';\n\nimport TopNav from './top-nav';\nimport LeftNav from './left-nav';\nimport Footer from './footer';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    overflow: 'auto'\n  },\n  main: {\n    minHeight: `calc(100vh - 72px)` // we need to subtract the height of footer\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  }\n}));\n\ninterface Props {\n  children: JSX.Element | JSX.Element[];\n}\n\nfunction Layout(props: Props) {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n\n  const { children } = props;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <TopNav isOpen={open} onToggle={() => setOpen(!open)} />\n      <LeftNav isOpen={open} onClose={() => setOpen(false)} />\n\n      <div className={classes.content}>\n        <main className={classes.main}>\n          <div className={classes.appBarSpacer} />\n\n          <Container maxWidth=\"lg\" className={classes.container}>\n            {children}\n          </Container>\n        </main>\n\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","export enum AssetClass {\n  Cash,\n  Stocks,\n  Crypto,\n  ETF\n}\n\nexport enum Platform {\n  FlowBank,\n  Bitstamp,\n  TrueWealth,\n  UBS,\n  Swissquote\n}\n\nexport interface PortfolioLine {\n  label: string;\n  assetClass: AssetClass;\n  amount?: number;\n  value: number;\n  date: Date;\n  location: Platform;\n}\n\nexport const data: PortfolioLine[] = [\n  {\n    label: 'ABBN',\n    assetClass: AssetClass.Stocks,\n    amount: 4,\n    value: 26.44,\n    date: new Date(2021, 0, 15),\n    location: Platform.FlowBank\n  },\n  {\n    label: 'AMS',\n    assetClass: AssetClass.Stocks,\n    amount: 4,\n    value: 21.74,\n    date: new Date(2021, 0, 15),\n    location: Platform.FlowBank\n  },\n  {\n    label: 'NOVN',\n    assetClass: AssetClass.Stocks,\n    amount: 1,\n    value: 85.6,\n    date: new Date(2021, 0, 15),\n    location: Platform.FlowBank\n  },\n  {\n    label: 'LONZ',\n    assetClass: AssetClass.Stocks,\n    amount: 1,\n    value: 585.6,\n    date: new Date(2021, 0, 15),\n    location: Platform.FlowBank\n  },\n  {\n    label: 'CHF',\n    assetClass: AssetClass.Cash,\n    amount: 56.08,\n    value: 1,\n    date: new Date(2021, 0, 15),\n    location: Platform.FlowBank\n  }\n];\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\ntype Type = 'pageTitle' | 'subtitle' | 'groupTitle';\n\ninterface Props {\n  title: string;\n  type: Type;\n  className?: string;\n}\n\nexport default (props: Props) => {\n  const { title, type, className } = props;\n\n  const getComponentByType = (): 'h1' | 'h2' | 'h3' => {\n    if (type === 'subtitle') return 'h2';\n    if (type === 'groupTitle') return 'h3';\n    return 'h1';\n  };\n\n  const getVariantByType = () => {\n    if (type === 'subtitle') return 'h5';\n    if (type === 'groupTitle') return 'h6';\n    return 'h4';\n  };\n\n  return (\n    <Typography\n      component={getComponentByType()}\n      variant={getVariantByType()}\n      className={`${className ? ' ' + className : ''}`}\n    >\n      {title}\n    </Typography>\n  );\n};\n","import React from 'react';\n\nimport { List, Types } from '@nexys/mui-list';\nimport * as Portfolio from 'interface/portfolio';\n\nimport NUtils from '@nexys/utils';\n\nconst def: Types.Definition<Portfolio.PortfolioLine> = [\n  { name: 'label', label: 'Label' },\n  { name: 'amount', label: 'Amount' },\n  { name: 'value', label: 'Value' },\n  {\n    name: 'value',\n    label: 'Total',\n\n    render: x => (\n      <span style={{ textAlign: 'right' }}>\n        {NUtils.number.formatNumber(x.value * (x.amount || 1))}\n      </span>\n    )\n  }\n];\n\nconst total: number = Portfolio.data\n  .map(x => x.value * (x.amount || 1))\n  .reduce((a, b) => a + b, 0);\n\nexport default () => (\n  <>\n    <List def={def} data={Portfolio.data} />\n    <span>{NUtils.number.formatNumber(total)}</span>\n  </>\n);\n","import React from 'react';\nimport Title from 'common/title';\n\nimport Table from './table';\n\nexport default () => (\n  <>\n    <Title title=\"Portfolio\" type=\"pageTitle\" />\n    <Table />\n  </>\n);\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Title from 'common/title';\n\nconst Layout = (props: { title: string; children: any }): JSX.Element => {\n  return (\n    <>\n      <Grid item xs={6}>\n        <Title title={props.title} type=\"pageTitle\" />\n      </Grid>\n      {props.children}\n    </>\n  );\n};\n\nexport default Layout;\n","import { Profile } from './type';\n\nexport const profile: Profile = {\n  firstName: 'John',\n  lastName: 'Doe',\n  email: 'john.doe@gmail.com',\n  uuid: 'myuid'\n};\n","import React from 'react';\n\nimport { Data as D, UI } from '@nexys/material-components';\nimport { Typography } from '@material-ui/core';\n\nimport Layout from 'common/layout';\nimport * as Data from '../../interface/profile';\nimport * as T from '../../interface/profile/type';\nimport { Profile } from '../../interface/profile/type';\n\nconst View = (props: { data: Profile }) => {\n  const { data } = props;\n  return (\n    <>\n      <UI.View.Wrapper label=\"First Name\">\n        <Typography>{data.firstName}</Typography>\n      </UI.View.Wrapper>\n      <UI.View.Wrapper label=\"Last Name\">\n        <Typography>{data.lastName}</Typography>\n      </UI.View.Wrapper>\n      <UI.View.Wrapper label=\"Email\">\n        <Typography>{data.email}</Typography>\n      </UI.View.Wrapper>\n    </>\n  );\n};\n\nconst List = () => {\n  return (\n    <Layout title={'Profile'}>\n      <D.Load.WithLoader<T.Profile> Component={View} dataLoad={Data.detail()} />\n    </Layout>\n  );\n};\n\nexport default List;\n","import { withBackend } from 'config';\n//import { Stateful } from '@nexys/material-components';\nimport { Profile } from './type';\nimport * as Mock from './mock-data';\n\nexport const detail = (): Promise<Profile> => {\n  if (!withBackend) {\n    return new Promise(r => r(Mock.profile));\n  }\n\n  throw Error(\"in demo mode, there's no backend\");\n  //return Stateful.Request.post('/profile/detail');\n};\n","import React from 'react';\nimport { Switch, Route, Redirect, RouteComponentProps } from 'react-router-dom';\n\nimport Layout from './layout';\nimport Dashboard from './dashboard';\n\nimport Profile from './profile';\nimport authWrapper from '../common/auth/wrapper';\n\nimport * as Links from 'common/link';\n\nfunction App(props: RouteComponentProps) {\n  return (\n    <Layout>\n      <Switch>\n        <Route path={Links.App.dashboard} component={Dashboard} props={props} />\n\n        <Route path={Links.App.profile} component={Profile} props={props} />\n        <Route\n          path={Links.App.default}\n          component={() => <Redirect to={Links.App.dashboard} />}\n        />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default authWrapper(App, 'app');\n","import React from 'react';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\n\nimport { Stateful } from '@nexys/material-components';\n\nexport const REDIRECT_URI = 'redirectUri';\n\nexport default (\n  App: (props: RouteComponentProps) => JSX.Element,\n  permission: string\n) => (props: RouteComponentProps) => {\n  const permissions = Stateful.Credentials.getPermissions();\n\n  const path = props.location.pathname;\n\n  // user not authenticated\n  if (!permissions) {\n    Stateful.Store.set(REDIRECT_URI, path);\n    return <Redirect to={'/login'} />;\n  }\n\n  // user unauthorized\n  if (!permissions.includes(permission)) {\n    Stateful.Store.set(REDIRECT_URI, path);\n    return <Redirect to={'/unauthorized'} />;\n  }\n\n  return <App {...props} />;\n};\n","import * as T from './type';\nimport * as ProfileMock from '../profile/mock-data';\nimport { Stateful } from '@nexys/material-components';\n\nconst mockLoginResponse = {\n  profile: ProfileMock.profile,\n  permissions: ['app', 'anotherpermission'],\n  lang: 'en'\n};\n\nexport const authenticate = async (\n  user: T.LoginInput\n): Promise<T.LoginResponse> => {\n  // here send the data to the backend and wait for output\n\n  if (user.email !== 'john@doe.com') {\n    return Promise.reject({ errors: { email: ['my uuid'] } });\n  }\n\n  const { profile, permissions, lang } = await Promise.resolve(\n    mockLoginResponse\n  );\n\n  Stateful.Credentials.set(profile, permissions, lang);\n\n  return { uuid: 'myuuid' };\n};\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { UI } from '@nexys/material-components';\nimport { appTitle } from 'config/index';\nimport * as Link from 'common/link';\nimport * as T from 'interface/login/type';\nimport * as D from 'interface/login';\n\nconst { Layout, Business } = UI;\n\nexport default () => {\n  const [redirect, setRedirect] = React.useState<string | undefined>(undefined);\n\n  if (redirect) {\n    return <Redirect to={redirect} />;\n  }\n\n  return (\n    <Layout.Login title={appTitle} layout=\"left\">\n      <Business.Login.Error name=\"notifLogout\">\n        You were successfully logged out.\n      </Business.Login.Error>\n\n      <Layout.Title title={'Login to Nexys'} type=\"groupTitle\" />\n\n      <p>\n        <small>\n          <i>\n            enter <code>john@doe.com</code> as email\n          </i>\n        </small>\n      </p>\n\n      <Business.Login.Login<T.LoginResponse>\n        onSuccess={(r: T.LoginResponse) => {\n          //alert(`form submitted and user with uuid \"${r.uuid}\" found`);\n          setRedirect('/app');\n        }}\n        onSubmit={x => {\n          return D.authenticate(x);\n        }}\n      />\n\n      <p>\n        <UI.Link to={Link.Public.signup}>to signup</UI.Link>\n      </p>\n    </Layout.Login>\n  );\n};\n","import React from 'react';\nimport { UI } from '@nexys/material-components';\nimport * as Link from 'common/link';\nexport default () => (\n  <UI.Layout.Login title={'Signup'}>\n    <h2>Signup</h2>\n    <p>here signup...</p>\n\n    <p>\n      <UI.Link to={Link.Public.login}>to login</UI.Link>\n    </p>\n  </UI.Layout.Login>\n);\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Stateful, UI } from '@nexys/material-components';\n\nimport { REDIRECT_URI } from 'common/auth/wrapper';\n\nexport default () => {\n  const history = useHistory();\n  return (\n    <UI.Layout.Login title={'Unauthorized'}>\n      <h2>Unauthorized</h2>\n      <p>\n        The page you were trying to access requires permissions that your\n        profile does not have. Get in touch with your administrator.\n      </p>\n\n      <p>\n        The page you were trying to access:{' '}\n        <code>{Stateful.Store.get(REDIRECT_URI)}</code>\n      </p>\n\n      <ul>\n        <li>\n          <UI.Buttons.Button onClick={() => history.goBack()} label={'Back'} />\n        </li>\n        <li>\n          <UI.Link to={'/login'}>Login</UI.Link>\n        </li>\n      </ul>\n    </UI.Layout.Login>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport * as Data from '../../interface/login/logout';\n\nexport default () => {\n  useEffect(() => {\n    Data.logout();\n  }, []);\n\n  return <Redirect to=\"/\" />;\n};\n","import { Stateful } from '@nexys/material-components';\n\nexport const logout = (): Promise<true> => {\n  Stateful.Credentials.remove();\n  Stateful.Store.set('notifLogout', true);\n  return Promise.resolve(true);\n};\n","import React from 'react';\n\nimport { Switch, Route, RouteComponentProps, Redirect } from 'react-router-dom';\n\nimport { Stateful } from '@nexys/material-components';\n\nimport * as Links from 'common/link';\n\nimport Login from './login';\nimport Signup from './signup';\nimport Unauthorized from './unauthorized';\nimport Logout from './logout';\n\nconst MyRouter = (props: RouteComponentProps) => {\n  return (\n    <Switch>\n      <Route path={Links.Public.logout} component={Logout} props={props} />\n      <Route path={Links.Public.signup} component={Signup} props={props} />\n      <Route\n        path={Links.Public.unauthorized}\n        component={Unauthorized}\n        props={props}\n      />\n      <Route path={Links.Public.login} component={Login} props={props} />\n      <Route\n        path={Links.Public.default}\n        component={() => {\n          // if the user is already logged in, redirect to the app main page\n          if (Stateful.Credentials.getProfile()) {\n            return <Redirect to={Links.App.default} />;\n          }\n\n          // else login\n          return <Redirect to={Links.Public.login} />;\n        }}\n      />\n    </Switch>\n  );\n};\n\nexport default MyRouter;\n","import React from 'react';\n\nimport {\n  Switch,\n  Route,\n  withRouter,\n  Router,\n  RouteComponentProps\n} from 'react-router-dom';\nimport * as History from 'history';\n\nimport { SnackbarProvider } from '@nexys/material-components';\n\nimport App from './app';\nimport Public from './public';\n\nconst history = History.createBrowserHistory({\n  basename: process.env.PUBLIC_URL || ''\n});\n\nconst MyRouter = (props: RouteComponentProps) => {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <Switch>\n        <Route path=\"/app\" component={App} props={props} />\n        <Route path=\"/\" component={Public} props={props} />\n      </Switch>\n    </SnackbarProvider>\n  );\n};\n\nconst R = withRouter(MyRouter);\n\nexport default () => (\n  <Router history={history}>\n    <R />\n  </Router>\n);\n","import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#5691ff'\n    },\n    secondary: {\n      main: '#ff5691'\n    },\n    background: {\n      default: '#f5f5f5'\n    },\n    success: {\n      main: '#91ff56'\n    }\n  }\n});\n\nexport default theme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport AppRouter from './router';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ThemeProvider } from '@nexys/material-components';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <AppRouter />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}