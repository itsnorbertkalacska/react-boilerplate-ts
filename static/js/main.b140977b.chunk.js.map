{"version":3,"sources":["app/layout/top-nav.tsx","config/index.ts","common/link/index.ts","app/layout/left-nav.tsx","app/layout/footer.tsx","app/layout/index.tsx","common/title/index.tsx","app/dashboard/index.tsx","app/crud/crud.tsx","app/crud/index.tsx","common/layout/index.tsx","interface/profile/mock-data.ts","app/profile/index.tsx","interface/profile/index.ts","common/auth/wrapper.tsx","app/index.tsx","interface/login/index.ts","public/login/index.tsx","public/signup/index.tsx","public/unauthorized/index.tsx","public/logout/index.tsx","interface/login/logout.ts","public/index.tsx","router.tsx","theme.js","serviceWorker.js","index.tsx"],"names":["Top","UI","Nav","useStyles","Utils","makeStyles","theme","appBar","backgroundColor","palette","primary","main","props","isOpen","onToggle","menus","link","Icon","UserIcon","LogoutIcon","classes","title","className","toRouteApp","s","toRoutePublic","Public","default","signup","unauthorized","login","logout","App","dashboard","crud","profile","unauthorizedPage","Left","Drawer","Menu","listMain","Link","label","DashboardIcon","CrudIcon","UnauthorizedPage","onClose","list","footer","padding","spacing","gitsha","process","Footer","Typography","variant","color","align","href","Date","getFullYear","root","display","appBarSpacer","mixins","toolbar","content","flexGrow","overflow","minHeight","container","paddingTop","paddingBottom","Layout","React","useState","open","setOpen","children","CssBaseline","Container","maxWidth","type","component","to","IconButton","countries","id","name","short","DataInterface","Promise","resolve","detail","c","find","x","Number","reject","insert","data","update","deleteById","dataDef","urlPrefix","displayType","fields","listConfig","search","Generic","Data","Grid","item","xs","firstName","lastName","email","uuid","View","Wrapper","List","Load","WithLoader","Component","dataLoad","r","Mock","permission","permissions","Stateful","Credentials","getPermissions","path","location","pathname","includes","Store","set","authWrapper","Links","Dashboard","Crud","Profile","mockLoginResponse","ProfileMock","lang","authenticate","user","a","errors","Business","undefined","redirect","setRedirect","Login","Error","Title","onSuccess","onSubmit","D","history","useHistory","get","Buttons","Button","onClick","goBack","useEffect","remove","MyRouter","Logout","Signup","Unauthorized","getProfile","History","basename","R","withRouter","maxSnack","createMuiTheme","common","black","white","light","dark","contrastText","secondary","error","text","third","disabled","hint","divider","background","paper","level2","level1","action","active","hover","hoverOpacity","selected","disabledBackground","typography","htmlFontSize","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","h1","fontWeight","lineHeight","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","textTransform","caption","overline","shape","borderRadius","zIndex","mobileStepper","speedDial","drawer","modal","snackbar","tooltip","nprogress","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b140977b.chunk.js","sourcesContent":["import React from 'react';\nimport { appTitle } from 'config/index';\n\nimport {\n  ExitToApp as LogoutIcon,\n  Person as UserIcon\n} from '@material-ui/icons';\n\nimport { UI, Utils } from '@nexys/material-components';\n\nconst {\n  Nav: { Top }\n} = UI;\n\nconst useStyles = Utils.makeStyles(theme => ({\n  appBar: {\n    backgroundColor: theme.palette.primary.main\n  }\n}));\n\nexport default (props: { isOpen: boolean; onToggle: any }) => {\n  const { isOpen, onToggle } = props;\n\n  const menus = [\n    { link: '/app/profile', Icon: UserIcon },\n    { link: '/logout', Icon: LogoutIcon }\n  ];\n  const classes = useStyles();\n\n  return (\n    <Top\n      title={appTitle}\n      menus={menus}\n      isOpen={isOpen}\n      onToggle={onToggle}\n      className={classes.appBar}\n    />\n  );\n};\n","export const withBackend = false;\n\nexport const appTitle = 'Boilerplate';\n","// repository of all links used in the application to avoid wrong refewrences\n\n/*\nattempt at having a less verbose solution: works but no autocomplete ...\nconst appArray = ['dashboard', 'crud', 'profile', 'unauthorizedPage'];\n\nconst AppMap: Map<string, string> = new Map(\n  appArray.map(k => {\n    return [k, '/app/' + k];\n  })\n);\n\nexport const App = Object.fromEntries(AppMap);\n*/\n\nconst toRouteApp = (s: string) => '/app' + s;\nconst toRoutePublic = (s: string) => '' + s;\n\nexport const Public = {\n  default: toRoutePublic('/'),\n  signup: toRoutePublic('/signup'),\n  unauthorized: toRoutePublic('/unauthorized'),\n  login: toRoutePublic('/login'),\n  logout: toRoutePublic('/logout')\n};\n\nexport const App = {\n  default: toRouteApp('/'),\n  dashboard: toRouteApp('/dashboard'),\n  crud: toRouteApp('/crud'),\n  profile: toRouteApp('/profile'),\n  unauthorizedPage: toRouteApp('/unauthorizedPage')\n};\n","import React from 'react';\n\nimport {\n  Dashboard as DashboardIcon,\n  Build as CrudIcon,\n  Block as UnauthorizedPage\n} from '@material-ui/icons';\n\nimport { UI } from '@nexys/material-components';\n\nimport * as Link from 'common/link';\n\nconst {\n  Nav: {\n    Left: { Drawer, Menu }\n  }\n} = UI;\n\ninterface TMenu {\n  link: string;\n  label: string;\n  Icon: any;\n  permission?: string;\n}\n\nconst listMain: TMenu[] = [\n  {\n    link: Link.App.dashboard,\n    label: 'Dashboard',\n    Icon: DashboardIcon\n  },\n  {\n    link: Link.App.crud,\n    label: 'Crud',\n    Icon: CrudIcon\n  },\n  {\n    link: Link.App.unauthorizedPage,\n    label: 'Unauthorized Page',\n    Icon: UnauthorizedPage\n  }\n];\n\nexport default (props: { isOpen: boolean; onClose: any }) => {\n  const { isOpen, onClose } = props;\n\n  // list of permissions from profile\n  //const permissions = Stateful.Credentials.getPermissions() || [];\n  //listMain /*.filter(x => permissions.includes(x.permission))*/\n\n  return (\n    <Drawer isOpen={isOpen} onClose={onClose}>\n      <Menu list={listMain} />\n    </Drawer>\n  );\n};\n","import React from 'react';\nimport { Typography, Link } from '@material-ui/core';\nimport { Utils } from '@nexys/material-components';\nimport { appTitle } from 'config/index';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  footer: {\n    padding: theme.spacing(2)\n  }\n}));\n\nconst gitsha: string = process.env.REACT_APP_GIT_SHA || 'GIT SHA';\nconst gitshaLink:string = 'https://github.com/nexys-system/react-boilerplate-ts/commit/' + gitsha;\n\nconst Footer = () => {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        Copyright ©{' '}\n        <Link color=\"inherit\" href=\"\">\n          {appTitle}\n        </Link>\n        {` ${new Date().getFullYear()}`}\n        <br />\n        <small><a href={gitshaLink}>{gitsha}</a></small>\n      </Typography>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { Utils } from '@nexys/material-components';\n\nimport TopNav from './top-nav';\nimport LeftNav from './left-nav';\nimport Footer from './footer';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    overflow: 'auto'\n  },\n  main: {\n    minHeight: `calc(100vh - 72px)` // we need to subtract the height of footer\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  }\n}));\n\ninterface Props {\n  children: JSX.Element | JSX.Element[];\n}\n\nfunction Layout(props: Props) {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n\n  const { children } = props;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <TopNav isOpen={open} onToggle={() => setOpen(!open)} />\n      <LeftNav isOpen={open} onClose={() => setOpen(false)} />\n\n      <div className={classes.content}>\n        <main className={classes.main}>\n          <div className={classes.appBarSpacer} />\n\n          <Container maxWidth=\"lg\" className={classes.container}>\n            {children}\n          </Container>\n        </main>\n\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\ntype Type = 'pageTitle' | 'subtitle' | 'groupTitle';\n\ninterface Props {\n  title: string;\n  type: Type;\n  className?: string;\n}\n\nexport default (props: Props) => {\n  const { title, type, className } = props;\n\n  const getComponentByType = (): 'h1' | 'h2' | 'h3' => {\n    if (type === 'subtitle') return 'h2';\n    if (type === 'groupTitle') return 'h3';\n    return 'h1';\n  };\n\n  const getVariantByType = () => {\n    if (type === 'subtitle') return 'h5';\n    if (type === 'groupTitle') return 'h6';\n    return 'h4';\n  };\n\n  return (\n    <Typography\n      component={getComponentByType()}\n      variant={getVariantByType()}\n      className={`${className ? ' ' + className : ''}`}\n    >\n      {title}\n    </Typography>\n  );\n};\n","import React from 'react';\nimport Title from 'common/title';\nimport { UI } from '@nexys/material-components';\n\nimport { IconButton } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nexport default () => (\n  <>\n    <Title title=\"Home\" type=\"pageTitle\" />\n    <p>\n      <UI.Link to={'/app/profile'}>an internal link</UI.Link>\n    </p>\n\n    <p>\n      Source\n      <a href={'https://github.com/nexys-system/react-boilerplate-ts'}>\n        <IconButton>\n          <GitHubIcon />\n        </IconButton>\n      </a>\n    </p>\n  </>\n);\n","import React from 'react';\n\nimport { CrudSimple } from '@nexys/material-components'; //'../lib/crud-simple/generic/app';\nimport * as T from '@nexys/material-components/dist/crud-simple/type';\nimport { Id, Uuid } from '@nexys/material-components/dist/common/type';\n\n// type definition\nexport interface CountrySimple {\n  id: Id;\n  name: string;\n  short: string;\n}\n\n// fake data\nconst countries = [\n  { id: 1, name: 'United States', short: 'USA' },\n  { id: 2, name: 'France', short: 'FR' },\n  { id: 3, name: 'Hungary', short: 'HU' },\n  { id: 4, name: 'Spain', short: 'ES' },\n  { id: 5, name: 'Germany', short: 'DE' },\n  { id: 6, name: 'Switzerland', short: 'CH' },\n  { id: 7, name: 'Canada', short: 'CA' }\n];\n\n// data interface (CRUD)\nconst DataInterface: T.DataInterface<CountrySimple> = {\n  list: () => Promise.resolve(countries),\n  detail: (id: Uuid | Id) => {\n    const c = countries.find(x => Number(x.id) === Number(id));\n    if (!c) {\n      return Promise.reject(null);\n    }\n    return Promise.resolve(c);\n  },\n  insert: (data: CountrySimple) => Promise.resolve({ id: 3 }),\n  update: (data: Partial<CountrySimple>) => Promise.resolve(true),\n  deleteById: (id: Id | Uuid) => Promise.resolve(true)\n};\n\n// data defintiion/ config\nconst dataDef: T.DataDef<CountrySimple> = {\n  urlPrefix: '/app/crud',\n  displayType: 'toggle',\n  title: 'Simple',\n  fields: [\n    { name: 'name', label: 'Name', type: 'string' },\n    { name: 'short', label: 'Short', type: 'string' }\n  ],\n  listConfig: { search: true }\n};\n\nexport default () => (\n  <CrudSimple.Generic.App dataDef={dataDef} Data={DataInterface} />\n);\n","import React from 'react';\nimport Title from 'common/title';\nimport CRUD from './crud';\n\nexport default () => {\n  return (\n    <>\n      <Title title=\"CRUD Example\" type=\"pageTitle\" />\n      <p>\n        This is a simple CRUD example, for more UX journey examples, please\n        refer to:{' '}\n        <a href=\"https://components.nexys.io/crud\">\n          https://components.nexys.io/crud\n        </a>\n      </p>\n      <CRUD />\n    </>\n  );\n};\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Title from 'common/title';\n\nconst Layout = (props: { title: string; children: any }): JSX.Element => {\n  return (\n    <>\n      <Grid item xs={6}>\n        <Title title={props.title} type=\"pageTitle\" />\n      </Grid>\n      {props.children}\n    </>\n  );\n};\n\nexport default Layout;\n","import { Profile } from './type';\n\nexport const profile: Profile = {\n  firstName: 'John',\n  lastName: 'Doe',\n  email: 'john.doe@gmail.com',\n  uuid: 'myuid'\n};\n","import React from 'react';\n\nimport { Data as D, UI } from '@nexys/material-components';\nimport { Typography } from '@material-ui/core';\n\nimport Layout from 'common/layout';\nimport * as Data from '../../interface/profile';\nimport { Profile } from '../../interface/profile/type';\n\nconst View = (props: { data: Profile }) => {\n  const { data } = props;\n  return (\n    <>\n      <UI.View.Wrapper label=\"First Name\">\n        <Typography>{data.firstName}</Typography>\n      </UI.View.Wrapper>\n      <UI.View.Wrapper label=\"Last Name\">\n        <Typography>{data.lastName}</Typography>\n      </UI.View.Wrapper>\n      <UI.View.Wrapper label=\"Email\">\n        <Typography>{data.email}</Typography>\n      </UI.View.Wrapper>\n    </>\n  );\n};\n\nconst List = () => {\n  return (\n    <Layout title={'Profile'}>\n      <D.Load.WithLoader Component={View} dataLoad={Data.detail()} />\n    </Layout>\n  );\n};\n\nexport default List;\n","import { withBackend } from 'config';\n//import { Stateful } from '@nexys/material-components';\nimport { Profile } from './type';\nimport * as Mock from './mock-data';\n\nexport const detail = (): Promise<Profile> => {\n  if (!withBackend) {\n    return new Promise(r => r(Mock.profile));\n  }\n\n  throw Error(\"in demo mode, there's no backend\");\n  //return Stateful.Request.post('/profile/detail');\n};\n","import React from 'react';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\n\nimport { Stateful } from '@nexys/material-components';\n\nexport const REDIRECT_URI = 'redirectUri';\n\nexport default (\n  App: (props: RouteComponentProps) => JSX.Element,\n  permission: string\n) => (props: RouteComponentProps) => {\n  const permissions = Stateful.Credentials.getPermissions();\n\n  const path = props.location.pathname;\n\n  // user not authenticated\n  if (!permissions) {\n    Stateful.Store.set(REDIRECT_URI, path);\n    return <Redirect to={'/login'} />;\n  }\n\n  // user unauthorized\n  if (!permissions.includes(permission)) {\n    Stateful.Store.set(REDIRECT_URI, path);\n    return <Redirect to={'/unauthorized'} />;\n  }\n\n  return <App {...props} />;\n};\n","import React from 'react';\nimport { Switch, Route, Redirect, RouteComponentProps } from 'react-router-dom';\n\nimport Layout from './layout';\nimport Dashboard from './dashboard';\nimport Crud from './crud';\nimport Profile from './profile';\nimport authWrapper from '../common/auth/wrapper';\n\nimport * as Links from 'common/link';\n\nconst UnauthorizedPage = () => <p>This content is unauthorized</p>;\n\nfunction App(props: RouteComponentProps) {\n  return (\n    <Layout>\n      <Switch>\n        <Route path={Links.App.dashboard} component={Dashboard} props={props} />\n        <Route path={Links.App.crud} component={Crud} props={props} />\n        <Route path={Links.App.profile} component={Profile} props={props} />\n        <Route\n          path={Links.App.unauthorizedPage}\n          component={authWrapper(\n            UnauthorizedPage,\n            'permissionThatDoesNotExist'\n          )}\n          props={props}\n        />\n        <Route\n          path={Links.App.default}\n          component={() => <Redirect to={Links.App.dashboard} />}\n        />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default authWrapper(App, 'app');\n","import * as T from './type';\nimport * as ProfileMock from '../profile/mock-data';\nimport { Stateful } from '@nexys/material-components';\n\nconst mockLoginResponse = {\n  profile: ProfileMock.profile,\n  permissions: ['app', 'anotherpermission'],\n  lang: 'en'\n};\n\nexport const authenticate = async (\n  user: T.LoginInput\n): Promise<T.LoginResponse> => {\n  // here send the data to the backend and wait for output\n\n  if (user.email !== 'john@doe.com') {\n    return Promise.reject({ errors: { email: ['my uuid'] } });\n  }\n\n  const { profile, permissions, lang } = await Promise.resolve(\n    mockLoginResponse\n  );\n\n  Stateful.Credentials.set(profile, permissions, lang);\n\n  return { uuid: 'myuuid' };\n};\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { UI } from '@nexys/material-components';\nimport { appTitle } from 'config/index';\nimport * as Link from 'common/link';\nimport * as T from 'interface/login/type';\nimport * as D from 'interface/login';\n\nconst { Layout, Business } = UI;\n\nexport default () => {\n  const [redirect, setRedirect] = React.useState<string | undefined>(undefined);\n\n  if (redirect) {\n    return <Redirect to={redirect} />;\n  }\n\n  return (\n    <Layout.Login title={appTitle}>\n      <Business.Login.Error name=\"notifLogout\">\n        You were successfully logged out.\n      </Business.Login.Error>\n\n      <Layout.Title title={'Login to Nexys'} type=\"groupTitle\" />\n\n      <p>\n        <small>\n          <i>\n            enter <code>john@doe.com</code> as email\n          </i>\n        </small>\n      </p>\n\n      <Business.Login.Login<T.LoginResponse>\n        onSuccess={(r: T.LoginResponse) => {\n          //alert(`form submitted and user with uuid \"${r.uuid}\" found`);\n          setRedirect('/app');\n        }}\n        onSubmit={x => {\n          return D.authenticate(x);\n        }}\n      />\n\n      <p>\n        <UI.Link to={Link.Public.signup}>to signup</UI.Link>\n      </p>\n    </Layout.Login>\n  );\n};\n","import React from 'react';\nimport { UI } from '@nexys/material-components';\nimport * as Link from 'common/link';\nexport default () => (\n  <UI.Layout.Login title={'Signup'}>\n    <h2>Signup</h2>\n    <p>here signup...</p>\n\n    <p>\n      <UI.Link to={Link.Public.login}>to login</UI.Link>\n    </p>\n  </UI.Layout.Login>\n);\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Stateful, UI } from '@nexys/material-components';\n\nimport { REDIRECT_URI } from 'common/auth/wrapper';\n\nexport default () => {\n  const history = useHistory();\n  return (\n    <UI.Layout.Login title={'Unauthorized'}>\n      <h2>Unauthorized</h2>\n      <p>\n        The page you were trying to access requires permissions that your\n        profile does not have. Get in touch with your administrator.\n      </p>\n\n      <p>\n        The page you were trying to access:{' '}\n        <code>{Stateful.Store.get(REDIRECT_URI)}</code>\n      </p>\n\n      <ul>\n        <li>\n          <UI.Buttons.Button onClick={() => history.goBack()} label={'Back'} />\n        </li>\n        <li>\n          <UI.Link to={'/login'}>Login</UI.Link>\n        </li>\n      </ul>\n    </UI.Layout.Login>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport * as Data from '../../interface/login/logout';\n\nexport default () => {\n  useEffect(() => {\n    Data.logout();\n  }, []);\n\n  return <Redirect to=\"/\" />;\n};\n","import { Stateful } from '@nexys/material-components';\n\nexport const logout = (): Promise<true> => {\n  Stateful.Credentials.remove();\n  Stateful.Store.set('notifLogout', true);\n  return Promise.resolve(true);\n};\n","import React from 'react';\n\nimport { Switch, Route, RouteComponentProps, Redirect } from 'react-router-dom';\n\nimport { Stateful } from '@nexys/material-components';\n\nimport * as Links from 'common/link';\n\nimport Login from './login';\nimport Signup from './signup';\nimport Unauthorized from './unauthorized';\nimport Logout from './logout';\n\nconst MyRouter = (props: RouteComponentProps) => {\n  return (\n    <Switch>\n      <Route path={Links.Public.logout} component={Logout} props={props} />\n      <Route path={Links.Public.signup} component={Signup} props={props} />\n      <Route\n        path={Links.Public.unauthorized}\n        component={Unauthorized}\n        props={props}\n      />\n      <Route path={Links.Public.login} component={Login} props={props} />\n      <Route\n        path={Links.Public.default}\n        component={() => {\n          // if the user is already logged in, redirect to the app main page\n          if (Stateful.Credentials.getProfile()) {\n            return <Redirect to={Links.App.default} />;\n          }\n\n          // else login\n          return <Redirect to={Links.Public.login} />;\n        }}\n      />\n    </Switch>\n  );\n};\n\nexport default MyRouter;\n","import React from 'react';\n\nimport {\n  Switch,\n  Route,\n  withRouter,\n  Router,\n  RouteComponentProps\n} from 'react-router-dom';\nimport * as History from 'history';\n\nimport { SnackbarProvider } from '@nexys/material-components';\n\nimport App from './app';\nimport Public from './public';\n\nconst history = History.createBrowserHistory({\n  basename: process.env.PUBLIC_URL || ''\n});\n\nconst MyRouter = (props: RouteComponentProps) => {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <Switch>\n        <Route path=\"/app\" component={App} props={props} />\n        <Route path=\"/\" component={Public} props={props} />\n      </Switch>\n    </SnackbarProvider>\n  );\n};\n\nconst R = withRouter(MyRouter);\n\nexport default () => (\n  <Router history={history}>\n    <R />\n  </Router>\n);\n","import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nconst theme = createMuiTheme({\n  mixins: {\n    toolbar: {\n      minHeight: 56,\n      '@media (min-width:0px) and (orientation: landscape)': {\n        minHeight: 48\n      },\n      '@media (min-width:600px)': {\n        minHeight: 64\n      }\n    }\n  },\n  palette: {\n    common: {\n      black: '#000',\n      white: '#fff'\n    },\n    type: 'dark',\n    primary: {\n      main: '#5F87CC',\n      light: 'rgb(22, 168, 250)',\n      dark: 'rgb(2, 76, 117)',\n      contrastText: '#fff'\n    },\n    secondary: {\n      main: 'rgb(220, 0, 78)',\n      light: 'rgb(227, 51, 113)',\n      dark: 'rgb(154, 0, 54)',\n      contrastText: '#fff'\n    },\n    error: {\n      light: '#e57373',\n      main: '#f44336',\n      dark: '#d32f2f',\n      contrastText: '#fff'\n    },\n    text: {\n      primary: 'rgba(0, 0, 0, 0.87)',\n      secondary: 'rgba(0, 0, 0, 0.54)',\n      third: 'rgba(0, 0, 0, 0.18)',\n      disabled: 'rgba(0, 0, 0, 0.38)',\n      hint: 'rgba(0, 0, 0, 0.38)'\n    },\n    divider: 'rgba(0, 0, 0, 0.12)',\n    background: {\n      paper: '#fff',\n      default: '#fff',\n      level2: '#f5f5f5',\n      level1: '#fff'\n    },\n    action: {\n      active: 'rgba(0, 0, 0, 0.54)',\n      hover: 'rgba(0, 0, 0, 0.08)',\n      hoverOpacity: 0.08,\n      selected: 'rgba(0, 0, 0, 0.14)',\n      disabled: 'rgba(0, 0, 0, 0.26)',\n      disabledBackground: 'rgba(0, 0, 0, 0.12)'\n    }\n  },\n  typography: {\n    htmlFontSize: 16,\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n    fontWeightBold: 700,\n    h1: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: 300,\n      fontSize: '6rem',\n      lineHeight: 1,\n      letterSpacing: '-0.01562em'\n    },\n    h2: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: 300,\n      fontSize: '3.75rem',\n      lineHeight: 1,\n      letterSpacing: '-0.00833em'\n    },\n    h3: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: 400,\n      fontSize: '3rem',\n      lineHeight: 1.04,\n      letterSpacing: '0em'\n    },\n    h4: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: 400,\n      fontSize: '2.125rem',\n      lineHeight: 1.17,\n      letterSpacing: '0.00735em'\n    },\n    h5: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: 400,\n      fontSize: '1.5rem',\n      lineHeight: 1.33,\n      letterSpacing: '0em'\n    },\n    h6: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: 500,\n      fontSize: '1.25rem',\n      lineHeight: 1.6,\n      letterSpacing: '0.0075em'\n    },\n    subtitle1: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: 400,\n      fontSize: '1rem',\n      lineHeight: 1.75,\n      letterSpacing: '0.00938em'\n    },\n    subtitle2: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: 500,\n      fontSize: '0.875rem',\n      lineHeight: 1.57,\n      letterSpacing: '0.00714em'\n    },\n    body1: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: 400,\n      fontSize: '1rem',\n      lineHeight: 1.5,\n      letterSpacing: '0.00938em'\n    },\n    body2: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: 400,\n      fontSize: '0.875rem',\n      lineHeight: 1.43,\n      letterSpacing: '0.01071em'\n    },\n    button: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: 500,\n      fontSize: '0.875rem',\n      lineHeight: 1.75,\n      letterSpacing: '0.02857em',\n      textTransform: 'uppercase'\n    },\n    caption: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: 400,\n      fontSize: '0.75rem',\n      lineHeight: 1.66,\n      letterSpacing: '0.03333em'\n    },\n    overline: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: 400,\n      fontSize: '0.75rem',\n      lineHeight: 2.66,\n      letterSpacing: '0.08333em',\n      textTransform: 'uppercase'\n    }\n  },\n  shape: {\n    borderRadius: 4\n  },\n  zIndex: {\n    mobileStepper: 1000,\n    speedDial: 1050,\n    appBar: 1100,\n    drawer: 1200,\n    modal: 1300,\n    snackbar: 1400,\n    tooltip: 1500\n  },\n  nprogress: {\n    color: '#000'\n  }\n});\n\nexport default theme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport AppRouter from './router';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ThemeProvider } from '@nexys/material-components';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <AppRouter />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}